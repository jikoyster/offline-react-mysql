{"mappings":"AAAA,iEAAiE;AACjE,MAAM,QAAQ;AACd,MAAM,SAAS;IACb;IACA;IACA;CACD;AAED,KAAK,gBAAgB,CAAC,WAAW,CAAC;IAChC,IAAI,SAAS,CACX,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,QAAU,MAAM,MAAM,CAAC;IAElD,KAAK,WAAW;AAClB;AAEA,KAAK,gBAAgB,CAAC,YAAY,CAAC;IACjC,IAAI,SAAS,CAAC,KAAK,OAAO,CAAC,KAAK;AAClC;AAEA,KAAK,gBAAgB,CAAC,SAAS,CAAC;IAC9B,IAAI,WAAW,CACb,OAAO,KAAK,CAAC,IAAI,OAAO,EAAE,IAAI,CAAC,CAAC,IAAM,KAAK,MAAM,IAAI,OAAO;AAEhE","sources":["public/service-worker.js"],"sourcesContent":["// Very small service worker: cache shell and respond from cache.\nconst CACHE = 'offline-sync-v1';\nconst ASSETS = [\n  '/',\n  '/index.html',\n  '/src/index.js',\n];\n\nself.addEventListener('install', (evt) => {\n  evt.waitUntil(\n    caches.open(CACHE).then((cache) => cache.addAll(ASSETS))\n  );\n  self.skipWaiting();\n});\n\nself.addEventListener('activate', (evt) => {\n  evt.waitUntil(self.clients.claim());\n});\n\nself.addEventListener('fetch', (evt) => {\n  evt.respondWith(\n    caches.match(evt.request).then((r) => r || fetch(evt.request))\n  );\n});"],"names":[],"version":3,"file":"service-worker.js.map","sourceRoot":"/__parcel_source_root/"}